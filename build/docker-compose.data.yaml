version: '3.2'
services:
### BACKEND
  account_db:
    container_name: account_db
    image: postgres:$POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/prod/account_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/prod/.env.account_db
    ports:
      - 54320:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U account" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - data-net
  auth_db:
    container_name: auth_db
    image: postgres:$POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/prod/auth_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/prod/.env.auth_db
    ports:
      - 54321:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U auth" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - data-net
  contest_cache:
    container_name: contest_cache
    image: redis:$REDIS_VERSION
    restart: unless-stopped
    volumes:
      - ${HUNCHO_DIR}/data/prod/contest_cache/redis_data:/var/libs/redis
      - ${HUNCHO_DIR}/data/prod/contest_cache/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - ${HUNCHO_DIR}/env/prod/.env.contest_cache
    ports:
      - 63722:6372
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - data-net
  contest_db:
    container_name: contest_db
    image: postgres:$POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/prod/contest_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/prod/.env.contest_db
    ports:
      - 54322:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U contest" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - data-net
  course_db:
    container_name: course_db
    image: postgres:$POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/prod/course_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/prod/.env.course_db
    ports:
      - 54323:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U course" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - data-net
  league_cache:
    container_name: league_cache
    image: redis:$REDIS_VERSION
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/data/prod/league_cache/redis_data:/var/libs/redis
      - ${HUNCHO_DIR}/data/prod/league_cache/redis.conf:/usr/local/etc/redis/redis.conf
      - ${HUNCHO_DIR}/build/bin/reset-redis.sh:/bin/reset-redis.sh
    env_file:
      - ${HUNCHO_DIR}/env/prod/.env.league_cache
    networks:
      - data-net
  league_db:
    container_name: league_db
    image: postgres:$POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/prod/league_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/prod/.env.league_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U league" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - data-net
###### KONG
  kong_db:
    container_name: kong_db
    image: postgres:$POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/prod/kong_db/data:/var/lib/postgresql/data
    env_file:
      - ${HUNCHO_DIR}/env/prod/.env.kong_db
    ports:
      - 44320:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 10s
      timeout: 5s
      retries: 20
### ADMINER
  adminer:
    container_name: adminer
    image: adminer:$ADMINER_VERSION
    restart: always
    ports:
      - 8080:8080
    networks:
      - data-net
#volumes:
#  mailer_volume:
networks:
  data-net:
    driver: bridge
