version: '2.1'
services:
  adminer:
    container_name: adminer
    build:
      context: ${HUNCHO_DIR}/services/adminer
      dockerfile: ${HUNCHO_DIR}/services/adminer/build/Dockerfile
    restart: always
    ports:
      - 8090:8080
  auth:
    container_name: auth
    build:
      context: ${HUNCHO_DIR}/services/auth
      dockerfile: ${HUNCHO_DIR}/services/auth/build/Dockerfile
    volumes:
      - ${HUNCHO_DIR}/services/auth/src:/home/app/src
      - ${HUNCHO_DIR}/services/auth/migrations:/home/app/migrations
      - ${HUNCHO_DIR}/services/auth/bin:/home/app/bin
      - ${HUNCHO_DIR}/services/auth/tests:/home/app/tests
      - ${HUNCHO_DIR}/services/auth/manage.py:/home/app/manage.py
    env_file:
      - ${HUNCHO_DIR}/env/dev/.env.auth
    healthcheck:
      test: curl --fail -s auth:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      auth_db:
        condition: service_healthy
  auth_db:
    container_name: auth_db
    build:
      context: ${HUNCHO_DIR}/services/postgresql
      dockerfile: ${HUNCHO_DIR}/services/postgresql/build/Dockerfile
    ports:
      - 5432:5432
    volumes:
      - ${HUNCHO_DIR}/data/auth_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/dev/.env.auth_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth"]
      interval: 10s
      timeout: 5s
      retries: 5
#  kong:
#    container_name: kong
#    build:
#      context: ${HUNCHO_DIR}/services/kong
#      dockerfile: ${HUNCHO_DIR}/services/kong/build/Dockerfile
#    restart: on-failure
#    env_file:
#      - ${HUNCHO_DIR}/env/dev/.env.kong
#    ports:
#      - 7000:8000
#      - 8001:8001
#      - 8443:8443
#      - 8444:8444
#    depends_on:
#      kong_db:
#        condition: service_healthy
#  kong_db:
#    container_name: kong_db
#    build:
#      context: ${HUNCHO_DIR}/services/postgresql
#      dockerfile: ${HUNCHO_DIR}/services/postgresql/build/Dockerfile
#    ports:
#      - 5433:5432
#    volumes:
#      - ${HUNCHO_DIR}/data/kong_db/data:/var/lib/postgresql/data
#    env_file:
#      - ${HUNCHO_DIR}/env/dev/.env.kong_db
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U kong"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#  kong_migration:
#    container_name: kong_migration
#    build:
#      context: ${HUNCHO_DIR}/services/kong
#      dockerfile: ${HUNCHO_DIR}/services/kong/build/Dockerfile.migration
#    env_file:
#      - ${HUNCHO_DIR}/env/dev/.env.kong_migration
#    depends_on:
#      kong_db:
#        condition: service_healthy
#  konga_prepare:
#    container_name: konga_prepare
#    build:
#      context: ${HUNCHO_DIR}/services/konga
#      dockerfile: ${HUNCHO_DIR}/services/konga/build/Dockerfile.prepare
##    command: "-c prepare -a postgres -u postgresql://kong:password@kong_db:5432/konga"
#    env_file:
#      - ${HUNCHO_DIR}/env/dev/.env.konga_prepare
#  konga:
#    container_name: konga
#    build:
#      context: ${HUNCHO_DIR}/services/konga
#      dockerfile: ${HUNCHO_DIR}/services/konga/build/Dockerfile
#    env_file:
#      - ${HUNCHO_DIR}/env/dev/.env.konga
#    ports:
#      - 1337:1337
  nginx:
    container_name: nginx
    build:
      context: ${HUNCHO_DIR}/services/nginx
      dockerfile: ${HUNCHO_DIR}/services/nginx/build/Dockerfile
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ${HUNCHO_DIR}/statics/.:/usr/share/nginx/
    depends_on:
      auth:
        condition: service_healthy
