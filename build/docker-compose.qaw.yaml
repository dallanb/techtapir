version: '3.2'
services:
  account:
    container_name: account
    build:
      context: ${HUNCHO_DIR}/services/account
      dockerfile: ${HUNCHO_DIR}/services/account/build/Dockerfile.qaw
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/services/account/migrations:/home/app/migrations
      - ${HUNCHO_DIR}/services/account/bin:/home/app/bin
      - ${HUNCHO_DIR}/services/account/tests:/home/app/tests
      - ${HUNCHO_DIR}/services/account/seeds:/home/app/seeds
      - ${HUNCHO_DIR}/services/account/src:/home/app/src
      - ${HUNCHO_DIR}/services/account/statics:/home/app/statics
      - ${HUNCHO_DIR}/services/account/manage.py:/home/app/manage.py
      - ${HUNCHO_DIR}/services/account/setup.py:/home/app/setup.py
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.account
      - ${HUNCHO_DIR}/secrets/s3/credentials.txt
    healthcheck:
      test: curl --fail -s account:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - account_db
    networks:
      - app-net
      - kong-net
  account_db:
    container_name: account_db
    build:
      context: ${HUNCHO_DIR}/services/postgresql
      dockerfile: ${HUNCHO_DIR}/services/postgresql/build/Dockerfile
      args:
        POSTGRES_VERSION: 9.6
    volumes:
      - ${HUNCHO_DIR}/data/qaw/account_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.account_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U account" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  adminer:
    container_name: adminer
    build:
      context: ${HUNCHO_DIR}/services/adminer
      dockerfile: ${HUNCHO_DIR}/services/adminer/build/Dockerfile
    restart: always
    ports:
      - 8080:8080
    networks:
      - app-net
  auth:
    container_name: auth
    build:
      context: ${HUNCHO_DIR}/services/auth
      dockerfile: ${HUNCHO_DIR}/services/auth/build/Dockerfile.qaw
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/services/auth/migrations:/home/app/migrations
      - ${HUNCHO_DIR}/services/auth/bin:/home/app/bin
      - ${HUNCHO_DIR}/services/auth/tests:/home/app/tests
      - ${HUNCHO_DIR}/services/auth/src:/home/app/src
      - ${HUNCHO_DIR}/services/auth/statics:/home/app/statics
      - ${HUNCHO_DIR}/services/auth/manage.py:/home/app/manage.py
      - ${HUNCHO_DIR}/services/auth/setup.py:/home/app/setup.py
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.auth
    healthcheck:
      test: curl --fail -s auth:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - auth_db
    networks:
      - app-net
      - kong-net
  auth_db:
    container_name: auth_db
    build:
      context: ${HUNCHO_DIR}/services/postgresql
      dockerfile: ${HUNCHO_DIR}/services/postgresql/build/Dockerfile
      args:
        POSTGRES_VERSION: 9.6
    volumes:
      - ${HUNCHO_DIR}/data/qaw/auth_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.auth_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  contest:
    container_name: contest
    build:
      context: ${HUNCHO_DIR}/services/contest
      dockerfile: ${HUNCHO_DIR}/services/contest/build/Dockerfile.qaw
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/services/contest/migrations:/home/app/migrations
      - ${HUNCHO_DIR}/services/contest/bin:/home/app/bin
      - ${HUNCHO_DIR}/services/contest/tests:/home/app/tests
      - ${HUNCHO_DIR}/services/contest/seeds:/home/app/seeds
      - ${HUNCHO_DIR}/services/contest/src:/home/app/src
      - ${HUNCHO_DIR}/services/contest/statics:/home/app/statics
      - ${HUNCHO_DIR}/services/contest/manage.py:/home/app/manage.py
      - ${HUNCHO_DIR}/services/contest/setup.py:/home/app/setup.py
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.contest
    healthcheck:
      test: curl --fail -s contest:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - contest_db
    networks:
      - app-net
      - kong-net
  contest_db:
    container_name: contest_db
    build:
      context: ${HUNCHO_DIR}/services/postgresql
      dockerfile: ${HUNCHO_DIR}/services/postgresql/build/Dockerfile
      args:
        POSTGRES_VERSION: 9.6
    volumes:
      - ${HUNCHO_DIR}/data/qaw/contest_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.contest_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U contest"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  kong:
    container_name: kong
    build:
      context: ${HUNCHO_DIR}/services/kong
      dockerfile: ${HUNCHO_DIR}/services/kong/build/Dockerfile
    restart: on-failure
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.kong
    ports:
      - 7000:8000
      - 8001:8001
      - 8443:8443
      - 8444:8444
    depends_on:
      - kong_db
    networks:
      - kong-net
  kong_db:
    container_name: kong_db
    build:
      context: ${HUNCHO_DIR}/services/postgresql
      dockerfile: ${HUNCHO_DIR}/services/postgresql/build/Dockerfile
      args:
        POSTGRES_VERSION: $POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/qaw/kong_db/data:/var/lib/postgresql/data
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.kong_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - kong-net
  konga:
    container_name: konga
    build:
      context: ${HUNCHO_DIR}/services/konga
      dockerfile: ${HUNCHO_DIR}/services/konga/build/Dockerfile
    restart: on-failure
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.konga
    depends_on:
      - kong_db
    networks:
      - kong-net
  notification:
    container_name: notification
    build:
      context: ${HUNCHO_DIR}/services/notification
      dockerfile: ${HUNCHO_DIR}/services/notification/build/Dockerfile.qaw
      args:
        NODE_VERSION: 12
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.notification
    networks:
      - app-net
      - kong-net
  notification_cache:
    container_name: notification_cache
    build:
      context: ${HUNCHO_DIR}/services/redis
      dockerfile: ${HUNCHO_DIR}/services/redis/build/Dockerfile
    volumes:
      - ${HUNCHO_DIR}/data/qaw/notification_cache/redis_data:/var/lib/redis
      - ${HUNCHO_DIR}/data/qaw/notification_cache/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.notification_cache
    networks:
      - app-net
  notification_mongodb:
    container_name: notification_mongodb
    build:
      context: ${HUNCHO_DIR}/services/mongodb
      dockerfile: ${HUNCHO_DIR}/services/mongodb/build/Dockerfile
      args:
        MONGO_VERSION: 3.6
    volumes:
      - ${HUNCHO_DIR}/data/qaw/notification_mongodb/data:/data/db
      - ${HUNCHO_DIR}/services/notification/bin/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.notification_mongodb
    networks:
      - app-net
  sport:
    container_name: sport
    build:
      context: ${HUNCHO_DIR}/services/sport
      dockerfile: ${HUNCHO_DIR}/services/sport/build/Dockerfile.qaw
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/services/sport/migrations:/home/app/migrations
      - ${HUNCHO_DIR}/services/sport/bin:/home/app/bin
      - ${HUNCHO_DIR}/services/sport/tests:/home/app/tests
      - ${HUNCHO_DIR}/services/sport/seeds:/home/app/seeds
      - ${HUNCHO_DIR}/services/sport/src:/home/app/src
      - ${HUNCHO_DIR}/services/sport/statics:/home/app/statics
      - ${HUNCHO_DIR}/services/sport/manage.py:/home/app/manage.py
      - ${HUNCHO_DIR}/services/sport/setup.py:/home/app/setup.py
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.sport
    healthcheck:
      test: curl --fail -s sport:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - sport_db
    networks:
      - app-net
      - kong-net
  sport_db:
    container_name: sport_db
    build:
      context: ${HUNCHO_DIR}/services/postgresql
      dockerfile: ${HUNCHO_DIR}/services/postgresql/build/Dockerfile
      args:
        POSTGRES_VERSION: 9.6
    volumes:
      - ${HUNCHO_DIR}/data/qaw/sport_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.sport_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sport"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  static:
    container_name: static
    build:
      context: ${HUNCHO_DIR}/services/static
      dockerfile: ${HUNCHO_DIR}/services/static/Dockerfile
    restart: unless-stopped
    volumes:
      - ${HUNCHO_DIR}/statics/.:/usr/share/nginx/
    networks:
      - app-net
      - kong-net
  wager:
    container_name: wager
    build:
      context: ${HUNCHO_DIR}/services/wager
      dockerfile: ${HUNCHO_DIR}/services/wager/build/Dockerfile.qaw
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/services/wager/migrations:/home/app/migrations
      - ${HUNCHO_DIR}/services/wager/bin:/home/app/bin
      - ${HUNCHO_DIR}/services/wager/tests:/home/app/tests
      - ${HUNCHO_DIR}/services/wager/seeds:/home/app/seeds
      - ${HUNCHO_DIR}/services/wager/src:/home/app/src
      - ${HUNCHO_DIR}/services/wager/statics:/home/app/statics
      - ${HUNCHO_DIR}/services/wager/manage.py:/home/app/manage.py
      - ${HUNCHO_DIR}/services/wager/setup.py:/home/app/setup.py
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.wager
    healthcheck:
      test: curl --fail -s wager:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - wager_db
    networks:
      - app-net
      - kong-net
  wager_db:
    container_name: wager_db
    build:
      context: ${HUNCHO_DIR}/services/postgresql
      dockerfile: ${HUNCHO_DIR}/services/postgresql/build/Dockerfile
      args:
        POSTGRES_VERSION: 9.6
    volumes:
      - ${HUNCHO_DIR}/data/qaw/wager_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.wager_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wager"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  web_pusher:
    container_name: web_pusher
    build:
      context: ${HUNCHO_DIR}/services/web-pusher
      dockerfile: ${HUNCHO_DIR}/services/web-pusher/build/Dockerfile.qaw
      args:
        NODE_VERSION: 12
    volumes:
      - ${HUNCHO_DIR}/secrets/golftapir/tech-tapir-firebase-adminsdk-3zrlh-3720b4d899.json:/home/app/secrets/firebase.json
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.web-pusher
    networks:
      - app-net
networks:
  app-net:
    driver: bridge
  kong-net:
    driver: bridge