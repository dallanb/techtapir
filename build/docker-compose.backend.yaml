version: '3.2'
services:
  account:
    container_name: account
    image: dallanbhatti/account:qaw
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/migrations/qaw/account:/home/app/migrations
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.account
    healthcheck:
      test: curl --fail -s account:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 30000:5000
    depends_on:
      - account_db
    networks:
      - app-net
  account_db:
    container_name: account_db
    image: postgres:$POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/qaw/account_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.account_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U account" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  adminer:
    container_name: adminer
    image: adminer:$ADMINER_VERSION
    restart: always
    ports:
      - 8080:8080
    networks:
      - app-net
  auth:
    container_name: auth
    image: dallanbhatti/auth:qaw
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/migrations/qaw/auth:/home/app/migrations
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.auth
    healthcheck:
      test: curl --fail -s auth:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 30001:5000
    depends_on:
      - auth_db
    networks:
      - app-net
  auth_db:
    container_name: auth_db
    image: postgres:$POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/qaw/auth_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.auth_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U auth" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  contest:
    container_name: contest
    image: dallanbhatti/contest:qaw
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/migrations/qaw/contest:/home/app/migrations
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.contest
      - ${HUNCHO_DIR}/secrets/s3/credentials.txt
    healthcheck:
      test: curl --fail -s contest:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 30002:5000
    depends_on:
      - contest_db
    networks:
      - app-net
  contest_cache:
    container_name: contest_cache
    image: redis:$REDIS_VERSION
    restart: unless-stopped
    volumes:
      - ${HUNCHO_DIR}/data/qaw/contest_cache/redis_data:/var/libs/redis
      - ${HUNCHO_DIR}/data/qaw/contest_cache/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.contest_cache
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  contest_db:
    container_name: contest_db
    image: postgres:$POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/qaw/contest_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.contest_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U contest" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  course:
    container_name: course
    image: dallanbhatti/course:qaw
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/migrations/qaw/course:/home/app/migrations
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.course
      - ${HUNCHO_DIR}/secrets/s3/credentials.txt
    healthcheck:
      test: curl --fail -s course:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 30007:5000
    depends_on:
      - course_db
    networks:
      - app-net
  course_db:
    container_name: course_db
    image: postgres:$POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/qaw/course_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.course_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U course" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  league:
    container_name: league
    image: dallanbhatti/league:qaw
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/migrations/qaw/league:/home/app/migrations
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.league
      - ${HUNCHO_DIR}/secrets/s3/credentials.txt
    healthcheck:
      test: curl --fail -s league:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 30009:5000
    depends_on:
      - league_db
      - league_cache
    networks:
      - app-net
  league_cache:
    container_name: league_cache
    image: redis:$REDIS_VERSION
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/data/qaw/league_cache/redis_data:/var/libs/redis
      - ${HUNCHO_DIR}/data/qaw/league_cache/redis.conf:/usr/local/etc/redis/redis.conf
      - ${HUNCHO_DIR}/build/bin/reset-redis.sh:/bin/reset-redis.sh
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.league_cache
    networks:
      - app-net
  league_db:
    container_name: league_db
    image: postgres:$POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/qaw/league_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.league_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U league" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  mailer:
    container_name: mailer
    image: dallanbhatti/mailer:qaw
    restart: on-failure
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.mailer
      - ${HUNCHO_DIR}/secrets/mailer/mailer_password.txt
    volumes:
      - mailer_volume:/home/app
    networks:
      - app-net
  mailer_web:
    container_name: mailer_web
    image: dallanbhatti/mailer_web:qaw
    restart: on-failure
    ports:
      - 30010:80
    volumes:
      - mailer_volume:/var/www/html
    depends_on:
      - mailer
    networks:
      - app-net
  member:
    container_name: member
    image: dallanbhatti/member:qaw
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/migrations/qaw/member:/home/app/migrations
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.member
      - ${HUNCHO_DIR}/secrets/s3/credentials.txt
    healthcheck:
      test: curl --fail -s member:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 30008:5000
    depends_on:
      - member_db
    networks:
      - app-net
  member_db:
    container_name: member_db
    image: postgres:$POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/qaw/member_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.member_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U member" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  notification:
    container_name: notification
    image: dallanbhatti/notification:qaw
    volumes:
      - ${HUNCHO_DIR}/migrations/qaw/notification:/home/app/migrations
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.notification
    ports:
      - 30003:3000
    depends_on:
      - notification_db
      - notification_mongodb
      - notification_cache
    networks:
      - app-net
  notification_cache:
    container_name: notification_cache
    image: redis:$REDIS_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/qaw/notification_cache/redis_data:/var/lib/redis
      - ${HUNCHO_DIR}/data/qaw/notification_cache/redis.conf:/usr/local/etc/redis/redis.conf
      - ${HUNCHO_DIR}/build/bin/reset-redis.sh:/bin/reset-redis.sh
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.notification_cache
    networks:
      - app-net
  notification_db:
    container_name: notification_db
    image: postgres:$POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/qaw/notification_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.notification_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U notification" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  notification_mongodb:
    container_name: notification_mongodb
    image: mongo:$MONGO_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/qaw/notification_mongodb/data:/data/db
      - ${HUNCHO_DIR}/data/qaw/notification_home:/home/mongodb # this must be manually created and chown'd to 999 https://github.com/docker-library/mongo/issues/323
      - ${HUNCHO_DIR}/build/bin/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
      - ${HUNCHO_DIR}/build/bin/reset-mongo.sh:/bin/reset-mongo.sh
    command: [ --auth ]
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.notification_mongodb
    networks:
      - app-net
  score:
    container_name: score
    image: dallanbhatti/score:qaw
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/migrations/qaw/score:/home/app/migrations
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.score
    healthcheck:
      test: curl --fail -s score:3000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - score_mongodb
    ports:
      - 30006:3000
    networks:
      - app-net
  score_mongodb:
    container_name: score_mongodb
    image: mongo:$MONGO_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/qaw/score_mongodb/data:/data/db
      - ${HUNCHO_DIR}/data/qaw/score_home:/home/mongodb # this must be manually created and chown'd to 999 https://github.com/docker-library/mongo/issues/323
      - ${HUNCHO_DIR}/build/bin/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
      - ${HUNCHO_DIR}/build/bin/reset-mongo.sh:/bin/reset-mongo.sh
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.score_mongodb
    networks:
      - app-net
  sport:
    container_name: sport
    image: dallanbhatti/sport:qaw
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/migrations/qaw/sport:/home/app/migrations
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.sport
    healthcheck:
      test: curl --fail -s sport:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 30004:5000
    depends_on:
      - sport_db
    networks:
      - app-net
  sport_db:
    container_name: sport_db
    image: postgres:$POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/qaw/sport_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.sport_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U sport" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  wager:
    container_name: wager
    image: dallanbhatti/wager:qaw
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/migrations/qaw/wager:/home/app/migrations
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.wager
    healthcheck:
      test: curl --fail -s wager:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 30005:5000
    depends_on:
      - wager_db
    networks:
      - app-net
  wager_db:
    container_name: wager_db
    image: postgres:$POSTGRES_VERSION
    volumes:
      - ${HUNCHO_DIR}/data/qaw/wager_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.wager_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U wager" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  web_pusher:
    container_name: web_pusher
    image: dallanbhatti/web-pusher:qaw
    volumes:
      - ${HUNCHO_DIR}/secrets/golftapir/tech-tapir-firebase-adminsdk-3zrlh-3720b4d899.json:/home/app/secrets/firebase.json
    env_file:
      - ${HUNCHO_DIR}/env/qaw/.env.web-pusher
    networks:
      - app-net
volumes:
  mailer_volume:
networks:
  app-net:
    driver: bridge
