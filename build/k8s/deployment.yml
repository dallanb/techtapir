apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: account
  name: account
spec:
  replicas: 2
  selector:
    matchLabels:
      app: account
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: account
    spec:
      volumes:
      - name: account-pv-storage
        persistentVolumeClaim:
          claimName: nfs-pvc-account
      containers:
      - image: dallanbhatti/account:prod
        imagePullPolicy: Always
        name: account
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: env-account
        resources: {}
        volumeMounts:
          - mountPath: "/home/app/migrations"
            name: account-pv-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: auth
  name: auth
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: auth
    spec:
      volumes:
      - name: auth-pv-storage
        persistentVolumeClaim:
          claimName: nfs-pvc-auth
      containers:
      - image: dallanbhatti/auth:prod
        imagePullPolicy: Always
        name: auth
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: env-auth
        resources: {}
        volumeMounts:
          - mountPath: "/home/app/migrations"
            name: auth-pv-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: contest
  name: contest
spec:
  replicas: 2
  selector:
    matchLabels:
      app: contest
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: contest
    spec:
      volumes:
      - name: contest-pv-storage
        persistentVolumeClaim:
          claimName: nfs-pvc-contest
      containers:
      - image: dallanbhatti/contest:prod
        imagePullPolicy: Always
        name: contest
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: env-contest
        - secretRef:
            name: s3-credentials
        resources: {}
        volumeMounts:
          - mountPath: "/home/app/migrations"
            name: contest-pv-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: course
  name: course
spec:
  replicas: 2
  selector:
    matchLabels:
      app: course
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: course
    spec:
      volumes:
      - name: course-pv-storage
        persistentVolumeClaim:
          claimName: nfs-pvc-course
      containers:
      - image: dallanbhatti/course:prod
        imagePullPolicy: Always
        name: course
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: env-course
        resources: {}
        volumeMounts:
          - mountPath: "/home/app/migrations"
            name: course-pv-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: league
  name: league
spec:
  replicas: 2
  selector:
    matchLabels:
      app: league
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: league
    spec:
      volumes:
      - name: league-pv-storage
        persistentVolumeClaim:
          claimName: nfs-pvc-league
      containers:
      - image: dallanbhatti/league:prod
        imagePullPolicy: Always
        name: league
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: env-league
        - secretRef:
            name: s3-credentials
        resources: {}
        volumeMounts:
          - mountPath: "/home/app/migrations"
            name: league-pv-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mailer
  name: mailer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailer
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mailer
    spec:
      volumes:
      - name: mailer-pv-storage
        persistentVolumeClaim:
          claimName: nfs-pvc-mailer
      containers:
      - image: dallanbhatti/mailer:prod
        imagePullPolicy: Always
        name: mailer
        ports:
        - containerPort: 9000
        envFrom:
        - configMapRef:
            name: env-mailer
        - secretRef:
            name: mailer-password
        resources: {}
        volumeMounts:
          - mountPath: "/home/app"
            name: mailer-pv-storage
      - image: dallanbhatti/mailer_web:prod
        imagePullPolicy: Always
        name: mailer_web
        ports:
        - containerPort: 80
        resources: {}
        volumeMounts:
          - mountPath: "/var/www/html"
            name: mailer-pv-storage
            readOnly: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: static
  name: static
spec:
  replicas: 1
  selector:
    matchLabels:
      app: static
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: static
    spec:
      containers:
      - image: dallanbhatti/static:prod
        imagePullPolicy: Always
        name: static
        ports:
        - containerPort: 80
        resources: {}